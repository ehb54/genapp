// ---------------------------------------------------------------------------------------------
// --------------- WARNING: this code is generated by an automatic code generator --------------
// ---------------------------------------------------------------------------------------------
// -------------- WARNING: any modifications made to this code will be overwritten -------------
// ---------------------------------------------------------------------------------------------

#include "../include/__classlower__.h"

__class__::__class__(
                                           void                     *              us_hydrodyn,
                                           map < QString, QString > *              parameters,
                                           QWidget *                               p,
                                           const char *                            name
                                           ) : QDialog( p, name )
{
   this->us_hydrodyn                          = us_hydrodyn;
   this->parameters                           = parameters;

   USglobal = new US_Config();
   setPalette( QPalette( USglobal->global_colors.cg_frame, USglobal->global_colors.cg_frame, USglobal->global_colors.cg_frame ) );
   setCaption( tr( "__caption__" ) );

   setupGUI();

   global_Xpos += 30;
   global_Ypos += 30;

   setGeometry( global_Xpos, global_Ypos, 0, 0 );
   __~minwidth{setMinimumWidth( __minwidth__ );}
}

__class__::~__class__()
{
}

void __class__::cancel()
{
   parameters->clear();
   close();
}

void __class__::help()
{
   US_Help *online_help;
   online_help = new US_Help( this );
   online_help->show_help("manual/somo/__manual__.html");
}

void __class__::closeEvent( QCloseEvent *e )
{
   global_Xpos -= 30;
   global_Ypos -= 30;
   e->accept();
}

void __class__::showhide( vector < QWidget * > & widgets, bool isChecked ) {
   for ( int i = 0; i < (int) widgets.size(); ++i ) {
      isChecked ? widgets[ i ]->show() : widgets[ i ]->hide();
   }
}

void __class__::setupGUI()
{
   QGridLayout * background = new QGridLayout( this );
   int row = 0;
   int col = 0;
   int colmax = 0;
